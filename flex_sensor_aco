/*
 *                         UNIVERSIDAD TÉCNICA DEL NORTE 
 *                            PROYECTO 1ER BIMESTRE
 *                             SISTEMAS EMBEBIDOS
 *                       
 *                       
 */
 
 
 ////////Aplicado el filtro averange///////
 #define tam_sig 801
#define tam_imp 21

extern int flex_sensor_aco [tam_sig];
extern int Impulse_response[tam_imp];
double exit_s[tam_sig+tam_imp];
double exit_signal[tam_sig];

int c;
int c2;
int i;
int j;
int x;  

void moving_average(int *sig_in, int *exit_signal, int sig_tam, int sn);
void setup() {
}

void loop() {


moving_average((int *)&flex_sensor_aco[0],(int *)& exit_signal[0],(int) tam_sig,11);
         
for(x=0;x<tam_sig;x++){
c=map(flex_sensor_aco[i],0,950,0,240);
c2=map(exit_signal[i],0,950,0,240);
analogWrite(6,c);
analogWrite(3,c2);
delay(10);
}
}

//suavizado de la señal 
void moving_average(int *sig_in,int *exiit_signal, int sig_tam, int sn){
  int i,j;
  for(i=floor(sn/2);i<sig_tam-floor(sn/2)-1;i++){
    exit_signal[i]=0;
  
    for(j=-floor(sn/2);j<floor(sn/2);j++){
      exit_signal[i]=exit_signal[i]+sig_in[i+j];
      
   }
    exit_signal[i]=exit_signal[i]/sn;
  
  }
}


////////////Aplicado el filtro media movil//////////

#define tam_sig 801
#define tam_imp 21

extern int flex_sensor_aco [tam_sig];
extern int Impulse_response[tam_imp];
double exit_s[tam_sig+tam_imp];
double exit_media[tam_sig];

int c;
int c2;
int i;
int j;
int x; 


void media(int *sig_in, float*exit_s, int sig_tam, float srg);
void setup() {
}

void loop() {


media((int *)&flex_sensor_aco[0], (float*)& exit_media[0], (int) tam_sig,  0.3) ;          
for(x=0;x<tam_sig;x++){
c=map(flex_sensor_aco[i],0,850,0,240);
c2=map(exit_media[i],0,850,0,240);
analogWrite(6,c);
analogWrite(3,c2);
delay(10);
}
}

 //Filtro media movil
 void media(int *sig_in, float *exit_media, int sig_tam, float srg){
  int i;
  exit_media[i]=0;
  for(i=0;i<sig_tam;i++){
  exit_media[i]=(srg*sig_in[i])+(1-srg)*exit_media[i];
  } 
}
/////////Relacion señal ruido a la señal utilizada/////////

#define tam_sig 677
#define tam_imp 21
extern int flex_sensor_aco [tam_sig];
extern int Impulse_response[tam_imp];
double exit_s[tam_sig+tam_imp];
double exit_signal[tam_sig];
double exit_media[tam_sig];

int c1;
int c2;
int i;
int j;
int x;  

void moving_average(int *sig_in, int *exit_signal, int sig_tam, int fft);
void media(int *sig_in, float*exit_s, int sig_tam, float tgr);
void setup() {
}

void loop() {


moving_average((int *)&flex_sensor_aco[0],(int *)& exit_signal[0],(int) tam_sig,11);

media((int *)&flex_sensor_aco[0], (float*)& exit_media[0], (int) tam_sig,  0.5) ;         
for(x=0;x<tam_sig;x++){
c1=map(exit_signal[i],0,880,0,220);
c2=map(exit_media[i],0,880,0,220);

analogWrite(5,c1);
analogWrite(3,c2);
delay(10);
}
}
//suavizado de la señal
void moving_average(int *sig_in,int *exit_signal, int sig_tam, int fft){
  int i,j;
  for(i=floor(fft/2);i<sig_tam-floor(fft/2)-1;i++){
    exit_signal[i]=0;
  
    for(j=-floor(fft/2);j<floor(fft/2);j++){
      exit_signal[i]=exit_signal[i]+sig_in[i+j];
   }
    exit_signal[i]=exit_signal[i]/fft;
  }
}

///media movil
 void media(int *sig_in, float *outputm, int sig_tam, float tgr){
  int i,j;
  outputm[i]=0;
  for(i=0;i<sig_tam;i++){
  outputm[i]=(tgr*sig_in[i])+(1-tgr)*outputm[i];
  }
  
}
