/*
 *                         UNIVERSIDAD TÉCNICA DEL NORTE 
 *                            PROYECTO 1ER BIMESTRE
 *                             SISTEMAS EMBEBIDOS
 *                                             
 */
 ///convolucion y averange a la señal del corazon
 
 #define tam_sig 500//tamano de vector de señal
#define tam_imp 13//tamano de vector del impulso

extern int ecg_100Hz [tam_sig];//señal entrada
extern int Impulse_response[tam_imp];//filtro FIR del Programa
double exit_convo[tam_sig+tam_imp]; //salida convolucion
double exit_aver[tam_sig];//salida average
//variables  a utilizar
int c1;
int c2;
int i;
int j;
int c;
 int x; 
void convolucion(int *sig_in,int *sig_out, int *imp, int sig_tam, int imp_tam);
void moving_average(int *sig_in, int *exit_aver, int sig_tam, int filter);
void setup() {
}

void loop() {


 convolucion((int *)&ecg_100Hz[0],(int *)&  exit_convo[0],(int *)&Impulse_response[0],
              (int) tam_sig,(int) tam_imp);
 moving_average((int *)&ecg_100Hz[0],(int *)& exit_aver[0],(int) tam_sig,11); 
          
for(i=0;x<tam_sig;x++){
c=map(ecg_100Hz[i],0,800,0,240);
c1=map(exit_aver[i],0,800,0,240);
c2=map( exit_convo[i],0,800,0,240);
analogWrite(6,c);
analogWrite(5,c1);
analogWrite(3,c2);
delay(10);
}
}

void convolucion(int *sig_in,int *sig_out, int *imp, int sig_tam, int imp_tam){
int i,j;
for(i=0;i<(sig_tam+imp_tam);i++){
  sig_out[i]=0;
}
for(i=0;i<sig_tam;i++){
  for(j=0;j<imp_tam;j++){
    sig_out[i+j]=sig_out[i+j]+sig_in[i]*imp[j];
    }
  }
}
void moving_average(int *sig_in,int *exit_aver, int sig_tam, int filter){
  int i,j;
  for(i=floor(filter/2);i<sig_tam-floor(filter/2)-1;i++){
    exit_aver[i]=0;
  
    for(j=-floor(filter/2);j<floor(filter/2);j++){
      exit_aver[i]=exit_aver[i]+sig_in[i+j];
    }
    exit_aver[i]=exit_aver[i]/filter;
  
  }
 }
 
 /////// media movil a la señal del corazon//////////
 
 
#define tam_sig 500
#define tam_imp 21
extern int ecg_100Hz [tam_sig];
extern int Impulse_response[tam_imp];
double exit_conv[tam_sig+tam_imp];
double exit_media[tam_sig];

int i;
int j;
int x;
int c;
int c2;
void media(int *sig_in, float* exit_conv, int sig_tam, float sgr);
void setup() {
}

void loop() {


media((int *)&ecg_100Hz[0], (float*)& exit_media[0], (int) tam_sig,  0.3) ;           
for(x=0;x<tam_sig;x++){
c=map(ecg_100Hz[i],0,950,0,240);
c2=map(exit_media[i],0,950,0,240);
analogWrite(6,c);
analogWrite(3,c2);
delay(10);
}
}

 //filtro de media movil
 void media(int *sig_in, float *exit_media, int sig_tam, float sgr){
  int i;
  exit_media[i]=0;
  for(i=0;i<sig_tam;i++){
  exit_media[i]=(sgr*sig_in[i])+(1-sgr)*exit_media[i];
  } 
}

//////Relacion señal ruido a la señal del corazon//////


#define tam_sig 500
#define tam_imp 21

extern int ecg_100Hz [tam_sig];
extern int Impulse_response[tam_imp];

double exit_s[tam_sig+tam_imp];
double exit_signal[tam_sig];
double exit_m[tam_sig];
double exit_media[tam_sig];


int c;
int c1;
int c2;
int i;
int j;
int x;  

void moving_average(int *sig_in, int *exit_signal, int sig_tam, int filter);
void media(int *sig_in, float*exit_s, int sig_tam, float ptt);
void setup() {
}

void loop() {
 media((int *)&ecg_100Hz[0], (float*)& exit_m[0], (int) tam_sig,  0.5) ; 

 moving_average((int *)&ecg_100Hz[0],(int *)& exit_signal[0],(int) tam_sig,11); 

         
for(x=0;x<tam_sig;x++){
c1=map(exit_signal[i],0,980,0,255);
c2=map(exit_m[i],0,980,0,255);
analogWrite(5,c1);
analogWrite(3,c2);
delay(10);
}
}
//suavizado de la señal
void moving_average(int *sig_in,int *exit_signal, int sig_tam, int filter){
  int i,j;
  for(i=floor(filter/2);i<sig_tam-floor(filter/2)-1;i++){
    exit_signal[i]=0;
  
    for(j=-floor(filter/2);j<floor(filter/2);j++){
      exit_signal[i]=exit_signal[i]+sig_in[i+j];
    }
    exit_signal[i]=exit_signal[i]/filter;
  
  }
 }
 void media(int *sig_in, float *outputm, int sig_tam, float ptt){
int i,j;
  exit_m[i]=0;
  for(i=0;i<sig_tam;i++){

  outputm[i]=(ptt*sig_in[i])+(1-ptt)*outputm[i];
  } 
}
